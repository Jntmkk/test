# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  #  build:
  #
  #    runs-on: ubuntu-latest
  #
  #    steps:
  #    - uses: actions/checkout@v2
  #    - name: Set up JDK 1.8
  #      uses: actions/setup-java@v1
  #      with:
  #        java-version: 1.8
  #
  #    - uses: mirromutth/mysql-action@v1.1
  #      with:
  #        host port: 3306 # Optional, default value is 3306. The port of host
  #        container port: 3306 # Optional, default value is 3306. The port of container
  #        character set server: 'utf8' # Optional, default value is 'utf8mb4'. The '--character-set-server' option for mysqld
  #        collation server: 'utf8_general_ci' # Optional, default value is 'utf8mb4_general_ci'. The '--collation-server' option for mysqld
  #        mysql version: '8.0' # Optional, default value is "latest". The version of the MySQL
  #        mysql database: 'some_test' # Optional, default value is "test". The specified database which will be create
  #        mysql root password: ${{ secrets.RootPassword }} # Required if "mysql user" is empty, default is empty. The root superuser password
  #        mysql user: 'developer' # Required if "mysql root password" is empty, default is empty. The superuser for the specified database. Can use secrets, too
  #        mysql password: ${{ secrets.DatabasePassword }} # Required if "mysql user" exists. The password for the "mysql user"
  #
  #    - name: Build with Maven
  #      run: mvn -B package --file pom.xml
  push-to-registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USER_NAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: bbmike253/my-web:latest
          secrets: |
            GIT_AUTH_TOKEN=${{ secrets.ACCESS_TOKEN }}

